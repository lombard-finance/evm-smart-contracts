import fs from 'fs';

/**
 * Used to verify contracts in block explorers using standard json input format
 * Extracts standard json file info from a build-info.json file generated by hardhat (found in artifacts/build-info/*.json)
 */

const extractSourceInfo = (buildInfo: {
  fileContent: { content: string };
  input: { sources: Array<any>; language: any; settings: any };
}) => {
  const sources: {
    [key: string]: { content: string };
  } = {};
  for (const [filePath, fileContent] of Object.entries(buildInfo.input.sources)) {
    sources[filePath] = {
      content: fileContent.content
    };
  }

  return {
    language: buildInfo.input.language,
    sources: sources,
    settings: buildInfo.input.settings
  };
};

const readJson = (filePath: string) => {
  return new Promise((resolve, reject) => {
    fs.readFile(filePath, 'utf8', (err, data) => {
      if (err) reject(err);
      else resolve(JSON.parse(data));
    });
  });
};

const writeJson = (filePath: string, data: any) => {
  return new Promise<void>((resolve, reject) => {
    fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf8', err => {
      if (err) reject(err);
      else resolve();
    });
  });
};

async function main() {
  try {
    // replace json name
    const buildInfoPath = '../artifacts/build-info/7a27352bd908f8ab4ac18135a48cdd5a.json';
    const outputPath = 'build-info-formatted.json';

    const buildInfo: any = await readJson(buildInfoPath);
    const formattedData = extractSourceInfo(buildInfo);

    await writeJson(outputPath, formattedData);
    console.log(`Formatted build info written to ${outputPath}`);
  } catch (error) {
    console.error(`Error: ${error}`);
  }
}

main().catch(error => {
  console.error(error);
  process.exitCode = 1;
});
